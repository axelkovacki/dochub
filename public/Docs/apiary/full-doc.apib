FORMAT: 1A
HOST: https://api.clippfacil.com.br/rpc/v1/

# ClippFácil - Manual da API

Esta documentação detalha os endpoints disponíves na API do ClippFácil, sendo que
a API segue o padrão **RPC** e o tráfego de dados é através de **JSON**.

### Ambientes e Formato da URL

Existem dois ambientes servindo a API, o ambiente de homologação e de produção. Para ambos os ambientes
é usado um formato padrão de serviço que é descrito a seguir:

**Produção:**

https://api.clippfacil.com.br

https://app.compufacil.com.br

**Homologação:**

http://app.homolog.clippfacil.com.br

http://homolog.compufacil.com.br

**Formato Padrão da URL:** [ambiente]/rpc/v1/[modulo.servico]

## Fiscal [/fiscal]

### Criar uma NFe/NFCe [POST /fiscal.post-nfe]

+ Attributes
    + tpNF (number, required) - description
    + modelo (number, required) - description
    + isExportation (boolean, required) - description
    + productOfTradeCollection (object, required):
        + product (object, required)
            + id (number)
        + price (number, required) - desc
        + quantity (number, required) - desc
        + discount (number) - desc
        + desoneracao (number) - desc
        + nDraw (number) - desc
        + nRE (number) - desc
        + qExport (number) - desc
        + chNFe (string) - desc
    + generationDate (string) - description
    + remainder (number) - description
    + serie (number) - description
    + simpleChange (boolean) - description
    + simpleChangePayment (number) - description
    + isConsumidorFinal (boolean) - description
    + contactPerson (string) - description
    + baseICMS (number) - description
    + valorICMS (number) - description
    + baseICMSST (number) - description
    + valorICMSST (number) - description
    + valorIPI (number) - description
    + ICMSdesoneracao (number) - description
    + freightType (number) - descripchNFetion
    + freightPrice (number) - description
    + discount (number) - description
    + discountIsPercentage (number) - description
    + insurance (number) - description
    + extraValue (number) - description
    + observation (string) - description
    + keyDevolution (string) - description
    + isDevolution (boolean) - description
    + isExpoation (boolean) - description
    + account (object)
        + id (number)
    + seller (object)
        + id (number)
    + category (object)
        + id (number)
    + tradeStatus (object)
        + id (number)
    + flowGroup (object)
        + id (number)
    + natureza (object)
        + id (number)
    + paymentModeCollection (object)
        + id (number)
        + range (object)
            + date (string, required)
            + value (string, required)
    + paymentMode (object)
        + id (number)
        + range (object)
            + date (string, required)
            + value (string, required)
    + volume (object)
        + brand (string)
        + species (string)
        + netWeight (number)
        + grossWeight (number)
        + quantity (number)
        + numeration (string)
    + buyer (object)
        + id (number)
        + identification (string, required)
        + rg (string)
        + name (string)
        + stateCode (string)
        + indicadorIE (string)
        + isRural (boolean)
    + shippingInfo (object)
        + address (object)
            + id (string)
            + type (string)
            + zipCode (object)
                 + id (number)
            + number (string)
            + complement (string)
            + street (string)
            + neighbourhood (string)
        + email (object)
            + address (string)
            + type (string)
        + phone (object)
            + number (string)
            + type (string)
            + areaCode (string)
            + countryCode (number)
    + deliveryInfo (object)
        + address (object)
            + id (string)
            + type (string)
            + zipCode (object)
                + id (number)
            + number (string)
            + complement (string)
            + street (string)
            + neighbourhood (string)
        + veiculo (object)
            + id (number)
        + delivery (object)
            + id (number)
            + identification (string)
            + name (string, required)
            + businessName (string)
    + rural (object)
        + numeroNF (number)
        + serie (number)
        + modelo (number)
        + mes (string)
        + ano (string)
    + exporta (object)
        + UFSaidaPais (string, required)
        + xLocExporta (string, required)
        + xLocDespacho (string, required)


+ Request
    + Headers

            Authorization-Compufacil: compufacil-token
            Content-type: application/json

+ Request (application/json)

        {
           "tpNF" : "",
            "modelo": 55,
            "isExportation": false,
            "productOfTradeCollection": {
                "product": {
                    "id": ""
                },
                "price": "",
                "quantity": "",
                "discount": "",
                "desoneracao": "",
                "nDraw": "",
                "nRE": "",
                "qExport": "",
                "chNFe": "",
            }
        }

+ Response 200 (application/json)
    + Body

            {
                "id": 10820
            }

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

### Transmitir NFe/NFCe [POST /fiscal.transmit-nfe]

+ Attributes
    + id (number, required) - description
    + sale_id (number) - description
    + sendEmail (boolean) - description
    + printDanfe (boolean) - description
    + printQueue (boolean) - description

+ Request
    + Headers

            Authorization-Compufacil: compufacil-token
            Content-type: application/json

+ Request (application/json)

        {
            "id": 10820,
            "sale_id": 1000,
            "sendEmail": false,
            "printDanfe": false,
            "printQueue": false
        }

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

## Autenticação [/auth]

### Criar nova conta [POST /application.signup-client]

+ Request
    + Headers

            Content-type: application/json

+ Request POST (application/json)
    + Body

            {
                "email": "test@domain.com",
                "username": "Foo Bar",
                "password": "123456",
                "phone": "4899888888",
                "termsAcceptance": true,
                "serialCode": "",
                "affiliateCode" : "",
                "discountCode": "",
                "paymentModeId": "",
                "identification": "",
                "lang": ""
            }

+ Response 200 (application/json)
     + Body

            {
                "status": 1,
                "user_id": 4117,
                "client_id": 2533,
                "client_uuid": "21b0c434-1bae-501e-b362-d9e61bae7fca"
            }

+ Response 500 (application/json)
     + Body

            {
                "error_message": "Alguém já está cadastrado com este e-mail",
                "error_file": "/var/www/html/clipp/Backend/module/Application/src/Application/Service/ApplicationException.php",
                "error_line": 29,
                "error_trace": "#0 /",
                "error_code": 0
            }

### Autenticar conta [POST /application.authenticate]
+ Request
    + Headers

            Content-type: application/json

+ Request POST (application/json)
    + Body

            {
                "login": "test@domain.com",
                "password": "123456"
            }

+ Response 200 (application/json)
     + Body

            {
                "status": 1,
                "access_token": "57066354b3a74daff8d01b0dd5b54a1b4a622cea",
                "auth_status": 200,
                "subscription_status": 200,
                "default_lang": "pt_BR",
                "is_admin": true,
                "optante_simples": null,
                "widgets_position": null,
                "disallowedAccess": []
            }

+ Response 401 (application/json)
     + Body

            {
                "error_message": "Login ou senha inválida",
                "additional_data": {
                    "sessionData": null
                },
                "error_file": "/var/www/html/clipp/Backend/module/Application/src/Application/Service/Auth/AuthException.php",
                "error_line": 16,
                "error_trace": "#0 /",
                "error_code": 401
            }

## Revenda [/reseller]

### Listar clientes de uma revenda (Compufour) [POST /reseller.resold-serials-by-identification]

+ Attributes
    + identification (number, required) - To get clients from this CPF/CNPJ reseller
    + search (string) - The key word search

+ Request
    + Headers

            Compufour-Authorization: {COMPUFOUR_TOKEN}
            Content-Type: application/json

+ Request (application/json)

        {
            "identification": 00000000000000,
            "search": "Name"
        }

+ Response 200 (application/json)
    + Body

            [
                {
                    "code": "123abcde",
                    "blocked": true,
                    "reseller": {
                        "id": 1,
                        "name": "Reseller Name",
                        "email": "foo@bar.com"
                    },
                    "paymentMode": {
                        "id": 1
                    },
                    "client": {
                        "uuid": "123abcde-123a-bcde-123456abcdef",
                        "identification": "00000000000000",
                        "id": 2,
                        "name": "Client Name",
                        "email": "client@mail.com",
                        "image": null,
                        "subscription": {
                            "id": 1,
                            "status": 1,
                            "dateStart": "2019-07-11T00:00:00-0300",
                            "dateEnd": "2020-07-11T23:59:59-0300"
                        }
                    }
                }
            ]

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

### Venda ou renovação de serial (Compufour) [POST /reseller.serial-sale]

+ Attributes
    + cliente (array, required) - Client data
        + email (string, required) - Client email
        + tipo_id (string, required) - Tipo 1 - Usuário|Tipo 2 - Revenda
        + tipo_descricao (string, required) - Usuário|Revenda
        + nome (string, required) - Client name
        + fantasia (string, required) - Client business name
        + cnpj_cpf (string, required) - Client CNPJ|CPF
        + ie_rg (string, required) - Client IE RG
        + contato (string, required) - Client contact name
        + end_cep (string) - Client CEP (Zip Code)
        + end_tipo (string) - Rua|Avenida|Etc
        + end_logradouro (string) - Client street name
        + end_numero (string) - Client address name
        + end_complemento (string) - Client complement
        + end_bairro (string) - Client neighborhood
        + fones (array) - Client fones
            + ddd (string)
            + numero (string)
        + emails (array) - Client emails
            + email (string)
    + seriais (array, required) - Seriais sold/renewed data
        + serial (string, required) - Serial code generated
        + tipo (string, required) - Serial type: FULL|RENOVACAO
        + data_suporte (string) - New serial expiration when is renew

+ Request
    + Headers

            Compufour-Authorization: {COMPUFOUR_TOKEN}
            Content-Type: application/json

+ Request POST (application/json)
    + Body

            {
                "venda_id": "000000",
                "venda_data": "2019-10-07",
                "venda_hora": "17:10:12",
                "cliente": {
                    "email": "foo@bar.com",
                    "tipo_id": "2",
                    "tipo_descricao": "Revenda",
                    "nome": "Foo Bar 10086592742",
                    "fantasia": "Enterprise LTDA MEI",
                    "cnpj_cpf": "00.000.000/0001-00",
                    "ie_rg": "000.000.000",
                    "contato": "Foo Bar",
                    "end_cep": "00000-000",
                    "end_tipo": "Rua",
                    "end_logradouro": "Xpto",
                    "end_numero": "66",
                    "end_complemento": "Perto de X",
                    "end_bairro": "Centro",
                    "end_id_cidade": "000000",
                    "fones": [
                      {
                        "ddd": "00",
                        "numero": "00000 0000"
                      },
                      {
                        "ddd": "00",
                        "numero": "00000 0000"
                      }
                    ],
                    "emails": [
                      {
                        "email": "foo@bar.com"
                      },
                      {
                        "email": "foo2@bar.com"
                      }
                    ]
                },
                "seriais": [
                    {
                        "serial": "H08XXX000010",
                        "tipo": "FULL",
                        "data_suporte": ""
                    },
                    {
                        "serial": "H08XXX000011",
                        "tipo": "RENOVACAO",
                        "data_suporte": "2020-10-01"
                    }
                ]
            }

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

## Clientes [/client]

### Listar informações do cliente por CPF/CNPJ ou email (Compufour) [POST /application.get-client-info]

+ Attributes
    + identification (number) - To get clients from this CPF/CNPJ
    + email (string) - To get clients from this email


+ Request
    + Headers

            Authorization-Compufacil: {COMPUFACIL_TOKEN}
            Compufour-Authorization: {COMPUFOUR_TOKEN}
            Content-Type: application/json

+ Request (application/json)

        {
            "identification": 00000000000000,
            "email": "foo@bar.com"
        }

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 666,
                    "uuid": "f7b5c082-58fe",
                    "name": "Nome do Cliente",
                    "email": "cliente@foo.com",
                    "emailInvoice": "",
                    "serial": null,
                    "shareableCode": "0000",
                    "identification": "00000000000000",
                    "paymentIdentifier": "cus_000000000000",
                    "created": "2015-09-10 16:09:36",
                    "phones": [
                        "(00) 00000000"
                    ],
                    "users": [
                        "user1@foo.com",
                        "user2@foo.com"
                    ],
                    "addresses": [
                        {
                            "number": "00",
                            "complement": null,
                            "neighbourhood": "Centro",
                            "zipcode": "00000000"
                        }
                    ],
                    "promotions": [],
                    "socialNetworks": [],
                    "currentSubscription": {
                        "id": 666,
                        "status": 1,
                        "paymentIdentifier": null,
                        "paymentMode": {
                            "id": 3,
                            "name": "Completo e gratuito"
                        },
                        "created": "2019-08-02",
                        "dateStart": "2019-08-02",
                        "dateEnd": null,
                        "payments": []
                }
            ]

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

### Bloquear cliente por CPF/CNPJ ou serial (Compufour) [POST /reseller.block-client]

+ Attributes
    + block (boolean, required) - true or false to block
    + identification (string) - Client CPF/CNPJ to block
    + serial (string) - Client serial to block

+ Request
    + Headers

            Compufour-Authorization: {COMPUFOUR_TOKEN}
            Content-Type: application/json

+ Request (application/json)

        {
            "identification": "00000000000000",
            "serial": "00fff00",
            "block": true
        }

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

### Bloquear um serial pelo código (Compufour) [POST /reseller.block-serial-code]

+ Attributes
    + serialCode (string) - Serial code to block
    + block (boolean, required) - true or false to block


+ Request
    + Headers

            Compufour-Authorization: {COMPUFOUR_TOKEN}
            Content-Type: application/json

+ Request (application/json)

        {
            "serial": "00fff00",
            "block": true
        }

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }

### Buscar logs dos usuários por período (Compufour) [POST /application.get-client-update-log]

+ Attributes
    + fromDate (string, required) - Data inicial  do filtro
    + toDate (string, required) - Data final do filtro


+ Request
    + Headers

            Compufour-Authorization: {COMPUFOUR_TOKEN}
            Content-Type: application/json

+ Request (application/json)

        {
            "fromDate": "2019-09-01",
            "toDate": "2019-10-01"
        }

+ Response 200 (application/json)
    + Body

            [
                {
                    "created": "2019-09-02T16:58:26-0300",
                    "fieldName": "identification",
                    "currentValue": "00445123400113",
                    "previousValue": "92168492000000",
                    "locationReference": "Application\\Model\\Client",
                    "registryIdentifier": "187"
                },
                {
                    "created": "2019-09-12T16:05:42-0300",
                    "fieldName": "identification",
                    "currentValue": "27579988000141",
                    "previousValue": "00445123400113",
                    "locationReference": "Application\\Model\\Client",
                    "registryIdentifier": "187"
                },
            ]

+ Response 500 (application/json)
    + Body

            {
                "error_message": "Error message"
            }
